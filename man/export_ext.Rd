% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export.R
\name{export_ext}
\alias{export_ext}
\alias{export_ext_csv}
\alias{export_ext_xlsx}
\alias{export_excel}
\alias{export_ext_rdata}
\alias{export_ext_RData}
\alias{export_ext_rda}
\alias{export_ext_rds}
\alias{export_ext_png}
\alias{export_fig}
\alias{export_viz}
\title{Save to a filepath.}
\usage{
export_ext(x = NULL, filename = deparse(substitute(x)),
  dir = paste0(getwd(), "/"), ext = NULL, filepath = paste0(dir, filename,
  ".", ext), overwrite = TRUE, backup = FALSE, filepath_backup = NULL,
  export = TRUE, ...)

export_ext_csv(...)

export_ext_xlsx(...)

export_excel(...)

export_ext_rdata(...)

export_ext_RData(...)

export_ext_rda(...)

export_ext_rds(...)

export_ext_png(...)

export_fig(...)

export_viz(...)
}
\arguments{
\item{x}{data.frame (or matrix) for most formats.}

\item{filename}{character. Bare filename (i.e. without folderor extension),}

\item{dir}{character. Folder name (with a trailing slash).}

\item{ext}{character. Bare extension (i.e. without a dot). Must be one of valid formats.}

\item{filepath}{character. Concatenation of `filename`, `dir`, and \code{ext},}

\item{overwrite}{boolean.}

\item{backup}{boolean.}

\item{filepath_backup}{like \code{filepath},}

\item{export}{boolean. Indicates whether to actually carry out action. Intended to be used as a "catch all".}

\item{...}{dots. May (or may not) be passed on to specific exporting functions.}
}
\value{
character. Filepath.
}
\description{
Saves an object to a filepath.
}
\details{
Object to save must be a data.frame (or matrix) for most formats.
}
\examples{
\dontrun{
if(interactive()){
 # These may be defined elsewhere in a project.
 dir_csv <- "csvs/"
 export_csv <- TRUE
 # ...
 export_ext(iris, ext = "csv", dir = dir_csv, export = export_csv)
 # Or...
 export_ext_csv(iris, dir = dir_csv, export = export_csv)
 }
}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/render_proj_io.R
\name{render_proj_io}
\alias{render_proj_io}
\title{Render project output}
\usage{
render_proj_io(filepaths_input, dir_input, ..., dir_output, filenames_output,
  rgx_input = ".", rgx_input_include = rgx_input, rgx_input_exclude = "",
  rgx_output_trim = "-v[0-9]+.R", ext_output = ".html", render = TRUE,
  return = TRUE, overwrite = TRUE, quiet = FALSE, backup = FALSE,
  backup_suffix = paste0("_", format(Sys.time(), "\%Y-\%m-\%d_\%H-\%M-\%S")),
  keep_rmd = FALSE)
}
\arguments{
\item{filepaths_input}{character. Can be a vector.}

\item{dir_input}{character. Should not be a vector. Only used if \code{filepaths_input} is missing.}

\item{...}{dots. Parameters passed to \code{list.files()}.}

\item{dir_output}{character. Should not be a vector. IMPORTANT: Relative to input directory (so something like "../output" is valid).}

\item{filenames_output}{character. Explicit filenames to use for output. Length of variable must exactly match number of filepaths meeting \code{list.files()} criteria.}

\item{rgx_input}{character. Alias to \code{pattern} parameter for \code{list.files()}. Used ONLY if \code{filepaths} is missing and \code{dir} is not.}

\item{rgx_input_include}{character. Regular expression to use to filter for \code{list.files()} output. (Somewhat redundant.)}

\item{rgx_input_exclude}{character. Regular expression to use to filter for \code{list.files()} output. (Somewhat redundant.)}

\item{rgx_output_trim}{character. Used ONLY if \code{filenames_output} is missing. Describes how input file names should be "trimmed" to make the output file name appear "cleaner".}

\item{ext_output}{character. File extension of output.}

\item{render}{boolean. Indiciates whether or not to actually carry out function.}

\item{return}{boolean. Relevant ONLY if \code{render == FALSE}.
Set to \code{TRUE} in order to preview what would be rendered.}

\item{overwrite}{boolean. Indicates whether or not to overwrite any existing file with the same name. Not currently used.}

\item{quiet}{boolean. Direct argument for \code{rmarkdown::render()}.}

\item{backup}{boolean. Indicates whether or not to create e a backup.}

\item{backup_suffix}{character. Suffix to append to filename for backup file.}

\item{keep_rmd}{boolean. Assuming specified output is not ".Rmd", indicates whether to call \code{knitr::spin} to keep "intermediate" results.}
}
\value{
data.frame. Information regarding what was rendered.
}
\description{
Renders R scripts with Roxygen comments into specified output format.
}
\details{
This is a wrapper for \code{rmarkdown::render()}` (and \code{knitr::spin()}, if \code{keep_rmd == TRUE}).
It is designed specifically to convert R scripts formatted with Roxgyen comments
into the specified output format. (In other words, it mirrors the behavior of \code{knitr::knit()}
for a R markdown document.
}
